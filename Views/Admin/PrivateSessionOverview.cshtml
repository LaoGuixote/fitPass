@model List<fitPass.Models.ViewModels.CoachPrivateScheduleViewModel>
@{
    ViewData["Title"] = "私人課程排班總覽";

    string GetSlotTime(int slot)
    {
        int start = 6 + (slot - 1);
        return $"{start:00}:00–{start + 1:00}:00";
    }
}



<div class="dashboard-box">
    <h2 ><i class="bi bi-person-workspace"></i> 私人課程排班總覽</h2>

@foreach (var coach in Model)
{
    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <div class="d-flex align-items-center">
                @if (coach.Photo != null)
                {
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(coach.Photo)" class="me-3" style="width:80px;height:80px;border-radius:50%;" />
                }
                <div>
                    <h5>@coach.CoachName</h5>
                    <p class="mb-0 text-muted">專長：@coach.Specialty</p>
                </div>
                <button class="btn btn-sm btn-outline-primary ms-auto" type="button" data-bs-toggle="collapse" data-bs-target="#coach-@coach.CoachId">
                    檢視班表
                </button>
            </div>

            <div class="collapse mt-3" id="coach-@coach.CoachId">
                <!-- 搜尋與分頁控制列 -->
                <div class="d-flex justify-content-between mb-2">
                    <input type="date" class="form-control w-auto" onchange="filterDate(@coach.CoachId, this.value)" />
                    <button class="btn btn-outline-danger" type="button" onclick="resetFilter(@coach.CoachId)">清除</button>
                    <div>
                            <div class="form-check ms-3">
                                <input class="form-check-input" type="checkbox" id="reservedOnly-@coach.CoachId" onchange="toggleReservedOnly(@coach.CoachId, this.checked)">
                                <label class="form-check-label" for="reservedOnly-@coach.CoachId">已預約明細</label>
                            </div>
                        <button class="btn btn-sm btn-outline-secondary" onclick="prevPage(@coach.CoachId)">上一頁</button>
                        <button class="btn btn-sm btn-outline-secondary" onclick="nextPage(@coach.CoachId)">下一頁</button>
                    </div>
                </div>

                <table class="table table-bordered table-sm coach-table" data-coach="@coach.CoachId">
                    <thead class="table-light">
                        <tr><th>日期</th><th>時段</th><th>狀態</th></tr>
                    </thead>
                    <tbody>
                        @{
                            var thisMonth = DateTime.Today.Month;
                            var thisYear = DateTime.Today.Year;
                        }

                        @foreach (var (t, i) in coach.CoachTimes.Select((val, idx) => (val, idx)))
                        {
                            var isThisMonth = t.Date.Month == thisMonth && t.Date.Year == thisYear;
                            <tr data-index="@i"
                                data-date="@t.Date.ToString("yyyy-MM-dd")"
                                data-thismonth="@(isThisMonth.ToString().ToLower())"
                                data-reserved="@(t.IsReserved.ToString().ToLower())">
                                <td>@t.Date.ToString("yyyy/MM/dd")</td>
                                <td>@GetSlotTime(t.TimeSlot)</td>
                                <td>
                                    @if (t.IsReserved)
                                    {
                                        <span class="text-danger">已預約：@t.MemberName</span>
                                    }
                                    else
                                    {
                                        <span class="text-success">可預約</span>
                                    }
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>

}
    </div>
@section Scripts {
    <script>
        const pageSize = 10;
        const coachPageState = {};

        function showPage(coachId) {
            const table = document.querySelector(`.coach-table[data-coach="${coachId}"]`);
            const rows = [...table.querySelectorAll("tbody tr")];
            const state = coachPageState[coachId] || { page: 0, filter: '', onlyThisMonth: true, reservedOnly: false };

            let visibleRows = rows;

            if (state.onlyThisMonth) {
                visibleRows = visibleRows.filter(r => r.dataset.thismonth === "true");
            }

            if (state.filter) {
                visibleRows = visibleRows.filter(r => r.dataset.date === state.filter);
            }

            if (state.reservedOnly) {
                visibleRows = visibleRows.filter(r => r.dataset.reserved === "true");
            }

            rows.forEach(r => r.style.display = "none");

            const start = state.page * pageSize;
            const end = start + pageSize;
            visibleRows.slice(start, end).forEach(r => r.style.display = "");
        }

        function prevPage(coachId) {
            coachPageState[coachId].page = Math.max(coachPageState[coachId].page - 1, 0);
            showPage(coachId);
        }

        function nextPage(coachId) {
            coachPageState[coachId].page += 1;
            showPage(coachId);
        }

        function filterDate(coachId, date) {
            coachPageState[coachId].filter = date;
            coachPageState[coachId].page = 0;
            coachPageState[coachId].onlyThisMonth = false;
            showPage(coachId);
        }

        function resetFilter(coachId) {
            coachPageState[coachId].filter = '';
            coachPageState[coachId].page = 0;
            coachPageState[coachId].onlyThisMonth = true;
            coachPageState[coachId].reservedOnly = false;

            const dateInput = document.getElementById(`date-input-${coachId}`);
            if (dateInput) {
                dateInput.value = '';
            }

            const checkbox = document.getElementById(`reservedOnly-${coachId}`);
            if (checkbox) {
                checkbox.checked = false;
            }

            showPage(coachId);
        }

        function toggleReservedOnly(coachId, checked) {
            coachPageState[coachId].reservedOnly = checked;
            coachPageState[coachId].page = 0;
            showPage(coachId);
        }

        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.coach-table').forEach(table => {
                const coachId = table.dataset.coach;
                coachPageState[coachId] = {
                    page: 0,
                    filter: '',
                    onlyThisMonth: true,
                    reservedOnly: false
                };
                showPage(coachId);
            });
        });
    </script>
}


